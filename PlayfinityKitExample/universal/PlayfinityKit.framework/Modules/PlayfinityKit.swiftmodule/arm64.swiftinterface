// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2 (swiftlang-1103.0.32.1 clang-1103.0.32.29)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PlayfinityKit
import Foundation
@_exported import PlayfinityKit
import PlayfinityPriv
import Swift
public enum BallEvent {
  case throwEvent(speed: Swift.Double)
  case catchEvent(airTime: Swift.Double, height: Swift.Double)
  case missEvent(airTime: Swift.Double, height: Swift.Double)
  case bounceEvent(airTime: Swift.Double, height: Swift.Double)
  case buttonPressEvent
}
public enum TrampolineEvent {
  case jumpEvent
  case landFeetEvent(yawRotation: Swift.Double, pitchRotation: Swift.Double)
  case buttonPressEvent
}
public enum FootballEvent {
  case kickEvent(speed: Swift.Double)
  case missEvent
  case bounceEvent
  case buttonPressEvent
}
public protocol SensorObserver : AnyObject {
  func playfinityKit(_ playfinityKit: PlayfinityKit.PlayfinityKit, didFoundSensor sensor: PlayfinityKit.Sensor)
  func playfinityKit(_ playfinityKit: PlayfinityKit.PlayfinityKit, lowBatteryOn sensor: PlayfinityKit.Sensor)
  func playfinityKit(_ playfinityKit: PlayfinityKit.PlayfinityKit, didGetEvent event: PlayfinityKit.BallEvent, onSensor sensor: PlayfinityKit.Sensor)
  func playfinityKit(_ playfinityKit: PlayfinityKit.PlayfinityKit, didGetEvent event: PlayfinityKit.TrampolineEvent, onSensor sensor: PlayfinityKit.Sensor)
  func playfinityKit(_ playfinityKit: PlayfinityKit.PlayfinityKit, didGetEvent event: PlayfinityKit.FootballEvent, onSensor sensor: PlayfinityKit.Sensor)
}
extension SensorObserver {
  public func playfinityKit(_ playfinityKit: PlayfinityKit.PlayfinityKit, didGetEvent event: PlayfinityKit.TrampolineEvent, onSensor sensor: PlayfinityKit.Sensor)
  public func playfinityKit(_ playfinityKit: PlayfinityKit.PlayfinityKit, didGetEvent event: PlayfinityKit.BallEvent, onSensor sensor: PlayfinityKit.Sensor)
  public func playfinityKit(_ playfinityKit: PlayfinityKit.PlayfinityKit, didGetEvent event: PlayfinityKit.FootballEvent, onSensor sensor: PlayfinityKit.Sensor)
}
@_hasMissingDesignatedInitializers public class Sensor : Swift.Equatable {
  public static func == (lhs: PlayfinityKit.Sensor, rhs: PlayfinityKit.Sensor) -> Swift.Bool
  public var name: Swift.String {
    get
  }
  public var id: Swift.String {
    get
  }
  public var firmware: Swift.String {
    get
  }
  public var type: PlayfinityKit.SensorType {
    get
  }
  @objc deinit
}
public enum SensorType {
  case ball
  case football
  case trampoline
  case sensor
  public static func == (a: PlayfinityKit.SensorType, b: PlayfinityKit.SensorType) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
}
public struct Configuration {
  public let applicationKey: Swift.String
  public let developerId: Swift.String
  public let sensorType: PlayfinityKit.SensorType
  public init(applicationKey: Swift.String, developerId: Swift.String, sensorType: PlayfinityKit.SensorType)
}
@_hasMissingDesignatedInitializers public class PlayfinityKit {
  @objc deinit
  public static func validate(configuration: PlayfinityKit.Configuration, completion: @escaping (Swift.Result<PlayfinityKit.PlayfinityKit, Swift.Error>) -> ())
  public func scan()
  public func stopScan()
  public func addObserver(_ observer: PlayfinityKit.SensorObserver)
  public func removeObserver(_ observer: PlayfinityKit.SensorObserver)
}
extension PlayfinityKit.SensorType : Swift.Equatable {}
extension PlayfinityKit.SensorType : Swift.Hashable {}
